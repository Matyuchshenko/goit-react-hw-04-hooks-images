{"version":3,"sources":["components/Container/Container.js","components/SearchBar/SearchBar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","services/hits-api.js","App.js","reportWebVitals.js","index.js"],"names":["Container","children","className","Searchbar","onHandleSubmit","useState","query","setQuery","onSubmit","e","preventDefault","trim","toast","info","type","value","autoComplete","autoFocus","placeholder","onChange","target","ImageGalleryItem","webformatURL","largeImageURL","tags","onOpenModal","src","alt","data-source","onClick","defaultProps","ImageGallery","images","map","id","Button","onLoadMore","modalRoot","document","querySelector","Modal","onToggleModal","useEffect","window","addEventListener","handler","removeEventListener","code","createPortal","currentTarget","axios","defaults","baseURL","params","key","image_type","orientation","per_page","apiService","q","page","a","get","data","hits","console","log","error","App","setImages","setLargeImageURL","setPage","setError","isLoading","setIsLoading","showModal","setShowModal","request","length","prevImages","scrollTo","top","documentElement","scrollHeight","behavior","fetchImages","toggleModal","scrollPage","setTimeout","scrollBy","innerHeight","newSearch","message","dataset","source","color","height","width","style","textAlign","prevPage","autoClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.81c2f5d1.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => <div className=\"container\">{children}</div>;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import { useState } from \"react\";\r\nimport \"./SearchBar.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function Searchbar({ onHandleSubmit }) {\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (query.trim() === \"\") {\r\n      return toast.info(\"Please enter a value for search images\");\r\n    }\r\n    onHandleSubmit(query);\r\n    setQuery(\"\");\r\n  };\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={onSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm__button\">\r\n          <span className=\"SearchForm__button__label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm__input\"\r\n          type=\"text\"\r\n          value={query}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={({ target }) => setQuery(target.value)}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onHandleSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport \"./ImageGalleryItem.css\";\r\n\r\nexport default function ImageGalleryItem({\r\n  webformatURL,\r\n  largeImageURL,\r\n  tags,\r\n  onOpenModal,\r\n}) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        data-source={largeImageURL}\r\n        className=\"ImageGalleryItem_image\"\r\n        onClick={onOpenModal}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.defaultProps = {\r\n  src: \"https://dummyimage.com/640x480/2a2a2a/ffffff&text=Photo%20not%20found\",\r\n  alt: \"\",\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport ImageGalleryItem from \"./../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nimport \"./ImageGallery.css\";\r\n\r\nexport default function ImageGallery({ images, onOpenModal }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          tags={tags}\r\n          onOpenModal={onOpenModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.defaultProps = {\r\n  images: [],\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nexport default function Button({ onLoadMore }) {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onLoadMore}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.defaultProps = {\r\n    onClick: () => null,\r\n    children: null\r\n}\r\n\r\nButton.propTypes = {\r\n  onLoadMore: PropTypes.func.isRequired,\r\n};","import PropTypes from \"prop-types\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport \"./Modal.css\";\r\n\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default function Modal({ children, onToggleModal }) {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handler);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handler);\r\n    };\r\n  });\r\n\r\n  const handler = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onToggleModal();\r\n    }\r\n  };\r\n\r\n  const handleBackdrop = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      onToggleModal();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleBackdrop}>\r\n      <div className=\"Modal\">{children}</div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  onToggleModal: PropTypes.func.isRequired,\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://pixabay.com/api/\";\r\nconst API_KEY = \"18815450-007739eb5f1c89a4d6d918d62\";\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  key: API_KEY,\r\n  image_type: \"photo\",\r\n  orientation: \"horizontal\",\r\n  per_page: 12,\r\n};\r\n\r\nconst apiService = async (q, page) => {\r\n  try {\r\n    const { data } = await axios.get(\"\", {\r\n      params: { q, page },\r\n    });\r\n    return data.hits;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return [];\r\n  }\r\n};\r\n\r\nexport default apiService;\r\n","import { useState, useEffect } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport Container from \"./components/Container/Container\";\nimport Loader from \"react-loader-spinner\";\nimport Searchbar from \"./components/SearchBar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from \"./components/Button\";\nimport Modal from \"./components/Modal\";\nimport apiService from \"./services/hits-api\";\n\nexport default function App() {\n  const [query, setQuery] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [largeImageURL, setLargeImageURL] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (query.trim() === \"\") {\n      return;\n    }\n    setIsLoading(true);\n    const fetchImages = async () => {\n      try {\n        const request = await apiService(query, page);\n        if (request.length === 0) {\n          return setError(`No results were found for ${query}!`);\n        }\n        setImages((prevImages) => [...prevImages, ...request]);\n      } catch (error) {\n        setError(\"Something went wrong. Try again.\");\n      } finally {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n        setIsLoading(false);\n      }\n    };\n    fetchImages();\n  }, [page, query]);\n\n  const searchImages = (newSearch) => {\n    setQuery(newSearch);\n    setImages([]);\n    setPage(1);\n    setError(null);\n  };\n\n  const onLoadMore = () => {\n    setIsLoading(true);\n    setPage((prevPage) => prevPage + 1);\n    scrollPage();\n  };\n\n  const onOpenModal = (e) => {\n    setLargeImageURL(e.target.dataset.source);\n    toggleModal();\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const scrollPage = () => {\n    setTimeout(() => {\n      window.scrollBy(0, window.innerHeight + 150);\n    }, 1000);\n  };\n\n  return (\n    <Container>\n      <Searchbar onHandleSubmit={searchImages} />\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\n      {images.length > 0 && (\n        <ImageGallery images={images} onOpenModal={onOpenModal} />\n      )}\n      {isLoading && (\n        <Loader\n          type=\"Oval\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          style={{ textAlign: \"center\" }}\n        />\n      )}\n      {!isLoading && images.length > 0 && <Button onLoadMore={onLoadMore} />}\n      {showModal && (\n        <Modal onToggleModal={toggleModal} largeImageURL={largeImageURL}>\n          <img src={largeImageURL} alt=\"\" />\n        </Modal>\n      )}\n      <ToastContainer autoClose={2000} />\n    </Container>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}